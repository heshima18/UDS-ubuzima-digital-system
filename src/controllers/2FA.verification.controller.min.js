import query from"./query.controller";import errorMessage from"./response.message.controller";import addToken from"./token.signer.controller";const verification=async(e,s)=>{let{email:r,_2FA_code:t}=e.body;if(!t||null==t)return s.send({success:!1,message:errorMessage._2FA_error_message});try{let e=await query("select \n            id,\n            status,\n            email,\n            Full_name,\n            role\n        from \n         patients\n          where \n          (email = ? AND fa = ?)\n          OR (username = ? AND fa = ?) \n          OR (phone = ? AND fa = ?) \n          OR (NID = ? AND fa = ?) \n          OR (id = ? AND fa = ?)",[r,t,r,t,r,t,r,t,r,t]);if(!e)return s.status(500).send({success:!1,message:errorMessage.is_error});if(0===e.length&&(e=await query("SELECT\n             users.id,\n             users.email,\n             users.Full_name,\n             users.role,\n             users.status,\n             users.department,\n             users.title,\n             users.extra \n             FROM\n              users \n            where \n            (email = ? AND fa = ?)\n            OR (username = ? AND fa = ?) \n            OR (phone = ? AND fa = ?) \n            OR (NID = ? AND fa = ?) \n            OR (id = ? AND fa = ?)",[r,t,r,t,r,t,r,t,r,t])),!e)return s.status(500).send({success:!1,message:errorMessage.is_error});if(e.length>0){if([e]=e,"patient"==e.role||"householder"==e.role)await query('update patients set fa = null,status = "active" where id = ?',[e.id]);else{var a=await query("select name,id from hospitals where JSON_CONTAINS(employees, JSON_QUOTE(?), '$')",[e.id]);if(a.length>1){let e=[];for(const s of a)e.push(s.id);a=e}else 1==a.length&&([a]=a);query(`update users set fa = null ${"unverified"===e.status?',status = "active"':""} where id = ?`,[e.id])}let r;if("patient"!=e.role&&"Admin"!=e.role&&"householder"!=e.role&&"insurance_manager"!=e.role&&"mohs"!=e.role){if(!(a.length||"id"in a))return s.status(403).send({success:!1,message:errorMessage.emp_inassigned_to_hp_error_message});r=addToken("id"in a?{id:e.id,Full_name:e.Full_name,role:e.role,status:e.status,hospital:a.id,department:e.department,title:e.title,hp_name:a.name}:{id:e.id,Full_name:e.Full_name,role:e.role,status:e.status,hospital:a,department:e.department,title:e.title,hp_name:"N/A"})}else if("insurance_manager"==e.role){let t=await query("select id from assurances where JSON_CONTAINS(managers, JSON_QUOTE(?),'$')",[e.id]);if(t.length>1){let e=[];for(const s of t)e.push(s.id);t=e}else{if(1!=t.length)return s.status(403).send({success:!1,message:errorMessage.emp_inassigned_to_assu_error_message});[t]=t}r=addToken({id:e.id,Full_name:e.Full_name,role:e.role,status:e.status,title:e.title,assurance:t.id})}else"mohs"==e.role?e.extra&&(e.extra=JSON.parse(e.extra),r=addToken({id:e.id,Full_name:e.Full_name,role:e.role,status:e.status,title:e.title,limit:e.extra.limit,location:e.extra.location})):r=addToken({id:e.id,Full_name:e.Full_name,role:e.role,status:e.status});return s.send({success:!0,message:r})}s.send({success:!1,message:errorMessage._2FA_error_message})}catch(e){s.status(500).send({success:!1,message:errorMessage.is_error}),console.log(e)}};export default verification;