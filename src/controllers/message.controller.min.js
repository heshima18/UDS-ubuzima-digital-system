import query from"./query.controller";import errorMessage from"./response.message.controller";import id from"./randomInt.generator.controller";import authenticateToken from"./token.verifier.controller";import{io}from"../socket.io/connector.socket.io";import{getMessage}from"./credentials.verifier.controller";import{DateTime}from"luxon";export const sendMessage=async(e,s)=>{try{const t=id(),r=DateTime.now();let n=r.setZone("Africa/Kigali");n=n.toFormat("yyyy-MM-dd HH:mm:ss");let{receiver:o,type:i,content:a,token:d,extra:c,title:l,controller:m}=e.body;if(m.looping){for(const e of m.recipients){let r=id(),o=authenticateToken(d),m=o.token.id,u=await query("insert\n           into messages\n           (id,user,receiver,type,title,content,addins,sessionid,dateadded)\n           values(?,?,?,?,?,?,?,?,?)",[r,m,e,i,l,a,JSON.stringify(c),t,n]);const g=Array.from(io.sockets.sockets.values()).find(s=>s.handshake.query.id===e);if(g?g.emit("message",{id:r,session:t,type:i,title:l,content:a,sender:{name:o.token.Full_name,id:m},extra:c,dateadded:new Date}):console.log("recepient is not online"),!u)return s.status(500).send({success:!1,message:errorMessage.is_error})}return s.send({success:!0,message:errorMessage.ms_message})}{let e=id(),r=authenticateToken(d),n=r.token.id,m=await query("insert\n         into messages\n         (id,user,receiver,type,title,content,addins,sessionid,dateadded)\n         values(?,?,?,?,?,?,?,?,CURRENT_TIMESTAMP())",[e,n,o,i,l,a,JSON.stringify(c),t]);const u=Array.from(io.sockets.sockets.values()).find(e=>e.handshake.query.id===o);if(u?u.emit("message",{id:e,session:t,type:i,title:l,content:a,sender:{name:r.token.Full_name,id:n},extra:c}):console.log("recepient is not online"),!m)return s.status(500).send({success:!1,message:errorMessage.is_error});s.send({success:!0,message:errorMessage.ms_message})}}catch(e){console.log(e),s.status(500).send({success:!1,message:errorMessage.is_error})}};export async function ioSendMessage(e){const s=DateTime.now();let t=s.setZone("Africa/Kigali");t=t.toFormat("yyyy-MM-dd HH:mm:ss");let r=id();const n=id();let o=await query("insert\n   into messages\n   (id,user,receiver,type,title,content,addins,sessionid,dateadded)\n   values(?,?,?,?,?,?,?,?,?)",[r,e.sender.id,e.receiver,e.type,e.title,e.content,JSON.stringify(e.extra),n,t]);return o?r:null}export async function ioSendMessages(e){const s=DateTime.now();let t=s.setZone("Africa/Kigali");t=t.toFormat("yyyy-MM-dd HH:mm:ss");const r=id();let{receivers:n,type:o,content:i,extra:a,title:d,sender:c}=e;try{for(const e of n){let s=id();await query("insert\n         into messages\n         (id,user,receiver,type,title,content,addins,sessionid,dateadded)\n         values(?,?,?,?,?,?,?,?,?)",[s,c.id,e,o,d,i,JSON.stringify(a),r,t]);const n=Array.from(io.sockets.sockets.values()).find(s=>s.handshake.query.id===e);n?n.emit("message",{id:s,session:r,type:o,title:d,content:i,sender:c,extra:a,dateadded:t}):console.log("recepient is not online")}return!0}catch(e){return console.log(e),!1}}export const getMessages=async(e,s)=>{try{let{token:t}=e.body;if(t=authenticateToken(t),!t.success)return s.status(500).send(errorMessage.is_error);let r=t.token.id,n=await query("select\n    COALESCE(\n      GROUP_CONCAT(\n        JSON_OBJECT(\n            'name', COALESCE(users.Full_name,patients.Full_name),\n            'id', COALESCE(users.id,patients.id)\n        )\n      )\n    , 'N/A') AS sender,\n    messages.id,\t\n    messages.type,\t\n    messages.title,\t\n    messages.content,\t\n    messages.addins,\n    messages.status,\t\n    messages.dateadded\n    FROM\n    messages\n    LEFT JOIN users ON messages.user = users.id\n    LEFT JOIN patients ON messages.user = patients.id\n    where receiver = ? GROUP BY messages.id order by messages.dateadded desc",[r]);if(!n)return s.status(500).send(errorMessage.is_error);if(!n.length)return s.send({success:!0,message:n});for(const e of n)n[n.indexOf(e)].sender=JSON.parse(e.sender),e.addins&&(n[n.indexOf(e)].addins=JSON.parse(e.addins)),n[n.indexOf(e)].dateadded=DateTime.fromISO(e.dateadded).toFormat("yyyy-MM-dd HH:mm:ss");s.send({success:!0,message:n})}catch(e){return console.log(e),s.status(500).send(errorMessage.is_error)}};export const markAsSeen=async(e,s)=>{try{let{token:t,message:r}=e.body;if(t=authenticateToken(t),!t.success)return s.status(500).send(errorMessage.is_error);let n=t.token.id,o=await query("UPDATE messages SET status = ? where receiver = ? and id = ?",["seen",n,r]);if(!o)return s.status(500).send(errorMessage.is_error);s.send({success:!0,message:errorMessage.me_message});let i=await getMessage(r);if(i){i=i[0];let e=i.sessionid;o=await query("UPDATE messages SET status = ? where sessionid = ? AND id != ?",["expired",e,r]);let s=await query("select id,receiver from messages where sessionid = ? AND id != ? group by receiver",[e,r]);for(const e of s){e.receiver==n&&console.log(e);const s=Array.from(io.sockets.sockets.values()).find(s=>s.handshake.query.id===e.receiver);s?s.emit("expiratemssg",e.id):console.log("recepient is not online")}}}catch(e){return console.log(e),s.status(500).send(errorMessage.is_error)}};