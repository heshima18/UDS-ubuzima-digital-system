import query from"./query.controller";import errorMessage from"./response.message.controller";import generate2FAcode from"./2FA.code.generator.controller";import sendmail from"./2FA.sender.controller";export const resend2FA=async(e,s)=>{let{username:r}=e.body;try{let e;if(e=await query("\n    SELECT id, status, email, Full_name,role \n    FROM patients\n    WHERE \n    username = ?  OR email = ?  OR NID = ?  OR id = ? ",[r,r,r,r]),0===e.length&&(e=await query("SELECT id, status, email, Full_name,role FROM users WHERE username = ?  OR email = ?  OR NID = ?  OR id = ? ",[r,r,r,r])),0===e.length)return void s.status(404).send({success:!1,message:errorMessage._err_u_404});const a=e[0];if("active"!==a.status&&"unverified"!==a.status)return void s.send({success:!1,message:errorMessage.uNa_error_message});const o=123456;sendmail(a.email,{subject:"UDS your 2FA one-time code",body:`${o}`},a.Full_name,"login-2-fa");let t;if(t="patient"==a.role||"householder"==a.role?await query("UPDATE patients SET FA = ? WHERE id = ?",[o,a.id]):await query("UPDATE users SET FA = ? WHERE id = ?",[o,a.id]),!t)return void s.status(500).send({success:!1,message:errorMessage.is_error});s.send({success:!0,message:errorMessage._2FA_code_message})}catch(e){s.status(500).send({success:!1,message:errorMessage.is_error}),console.log(e)}};