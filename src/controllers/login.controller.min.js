import query from"./query.controller";import errorMessage from"./response.message.controller";import generate2FAcode from"./2FA.code.generator.controller";import sendmail from"./2FA.sender.controller";const login=async(e,s)=>{let{username:r,password:o}=e.body;try{let e;if(e=await query("\n    SELECT id, status, email, Full_name,role \n    FROM patients\n    WHERE \n    (username = ? AND password = ?) OR (email = ? AND password = ?) OR (NID = ? AND password = ?) OR (id = ? AND password = ?)",[r,o,r,o,r,o,r,o]),0===e.length&&(e=await query("SELECT id, status, email, Full_name,role FROM users WHERE (username = ? AND password = ?) OR (email = ? AND password = ?) OR (NID = ? AND password = ?) OR (id = ? AND password = ?)",[r,o,r,o,r,o,r,o])),0===e.length)return void s.status(200).send({success:!1,message:errorMessage.lgIn_error_message});const a=e[0];if("active"!==a.status&&"unverified"!==a.status)return void s.send({success:!1,message:errorMessage.uNa_error_message});const t=generate2FAcode();sendmail(a.email,{subject:"UDS your 2FA one-time code",body:`${t}`},a.Full_name,"login-2-fa");let n;if(n="patient"==a.role||"householder"==a.role?await query("UPDATE patients SET FA = ? WHERE id = ?",[t,a.id]):await query("UPDATE users SET FA = ? WHERE id = ?",[t,a.id]),!n)return void s.status(500).send({success:!1,message:errorMessage.is_error});s.send({success:!0,message:errorMessage._2FA_code_message})}catch(e){s.status(500).send({success:!1,message:errorMessage.is_error}),console.log(e)}};export default login;