import authenticateToken from"../controllers/token.verifier.controller";import query from"../controllers/query.controller";import errorMessage from"../controllers/response.message.controller";import generate2FAcode from"../controllers/2FA.code.generator.controller";import{ioSendMessage}from"../controllers/message.controller";import{io}from"../socket.io/connector.socket.io";import{selectPatient,selectPatientFP}from"../controllers/patients.controller";import{MatchTemplate,connectFP}from"../controllers/fingerprint.controller";export const addPati2fa=async(e,r,t)=>{try{const{token:s}=e.body,{userid:o}=e.params,a=authenticateToken(s);if(!a.success)return r.status(500).send({message:errorMessage.is_error,success:!1});let{role:i,id:n}=a.token;if("patient"==i||"householder"==i)return t();let c,l,m,u,d={},f=generate2FAcode(),p=await query("UPDATE patients SET FA = ? WHERE id = ?",[f,o]);if(!p)return void r.status(500).send({message:errorMessage.is_error,success:!1});c=`some one tried to access your information share the requester with this code ${f} to authorize the access`,l="information access request",m={name:"system",id:"196371492058"},u="info_access_req";let h,g={type:u,content:c,title:l,sender:m,receiver:o,extra:d},y=await ioSendMessage(g);if(y){const e=Array.from(io.sockets.sockets.values()).filter(e=>e.handshake.query.id==o||e.handshake.query.id==n);if(Object.assign(g,{id:y}),e.forEach(e=>{e.handshake.query.id==o?e.emit("message",g):e.handshake.query.id==n&&(e.emit("accessAuth",o),h=e)}),h){const e=await new Promise((e,r)=>{h.on("authCode",async t=>{if("code"==t.type){let s=await selectPatient(t.user);s||r(0),s.FA!=t.v?r(0):e(1)}else if("fp"==t.type){let s,o=t.fp_data,a=await selectPatientFP(t.user);if(!a)return r(0);try{s=await connectFP("",r=>{r.type&&"comparison"==r.type&&r.success?(e(1),h.emit("RemoveAuthDivs",!0)):r.type&&"comparison"==r.type&&!r.success&&h.emit("messagefromserver","incorrect fingerprint try again")})}catch(e){s=!1}s?MatchTemplate(o,a.data):r(0)}})});if(!e)return r.status(401).send({message:errorMessage._err_forbidden,success:!1});t()}}}catch(e){console.log(e),r.status(500).send({message:errorMessage.is_error,success:!1})}};