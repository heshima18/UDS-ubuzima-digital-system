import{roles}from"../utils/roles.controller";import authenticateToken from"../controllers/token.verifier.controller";import errorMessage from"../controllers/response.message.controller";import query from"../controllers/query.controller";export const authorizeRole=async(e,s,r)=>{try{const{token:o}=e.body;if(!o)return s.status(401).send({success:!1,message:"token is missing"});const t=authenticateToken(o);if(!t.success)return s.status(401).json({message:"Invalid token"});let n=t.token.role;if(n=roles.find(function(e){return e==n}),!n)return s.status(403).send({message:errorMessage._err_forbidden,success:!1});if("patient"!=n&&"householder"!=n){if(n=await query("select id, role from users where id = ? AND role = ?",[t.token.id,n]),!n.length)return s.status(403).send({message:errorMessage._err_forbidden,success:!1})}else if(n=await query("select id, role from patients where id = ? AND role = ?",[t.token.id,n]),!n.length)return s.status(403).send({message:errorMessage._err_forbidden,success:!1});r()}catch(e){console.log(e),s.status(500).send({message:errorMessage.is_error,success:!1})}};export const authorizeRawRole=async(e,s,r)=>{try{let{role:o}=e.body;if(!o)return s.status(401).send({success:!1,message:"role is missing"});if(o=roles.find(function(e){return e==o}),!o)return s.status(403).send({message:errorMessage._err_forbidden,success:!1});r()}catch(e){console.log(e),s.status(500).send({message:errorMessage.is_error,success:!1})}};